name: Build OS Packages

on:
  push:
    branches:
      - 'main'

jobs:
  build-macos:
    runs-on: ${{ matrix.build.runner }}
    strategy:
      fail-fast: false
      matrix:
        build:
          # Intel
          - runner: macos-13
          # Apple Silicon
          - runner: macos-14
    steps:
      - name: Set variables
        run: |
          echo "ANON_ARTIFACT=anon-macos-$(uname -m)" >> $GITHUB_ENV
          echo "ANON_BREW_PREFIX=$(brew --prefix)" >> $GITHUB_ENV
          echo "ANON_JOBS=2"
      - name: Build anon
        run: |
          brew install automake docbook docbook-xsl zlib libevent openssl@3

          git clone https://github.com/ATOR-Development/ator-protocol.git
          cd ator-protocol

          ./autogen.sh
          ./configure --prefix=/usr/local \
            --disable-asciidoc \
            --disable-zstd \
            --disable-lzma \
            --with-zlib-dir=${{ env.ANON_BREW_PREFIX }}/opt/zlib \
            --with-libevent-dir=${{ env.ANON_BREW_PREFIX }}/opt/libevent \
            --with-openssl-dir=${{ env.ANON_BREW_PREFIX }}/opt/openssl@3 \
            --enable-static-zlib \
            --enable-static-libevent \
            --enable-static-openssl \
            --disable-tool-name-check \
            --disable-gcc-hardening
          make -j${{ env.ANON_JOBS }}
      - name: Copy executables to artifact directory
        run: |
          mkdir -p ${{ env.ANON_ARTIFACT }}
          cp ator-protocol/src/app/anon ${{ env.ANON_ARTIFACT }}
          cp ator-protocol/src/tools/anon-gencert ${{ env.ANON_ARTIFACT }}
      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: ${{ env.ANON_ARTIFACT }}
          path: ${{ env.ANON_ARTIFACT }}

  build-windows-64:
    runs-on: ubuntu-latest
    container:
      image: ubuntu:latest
    env:
      OPENSSL_VERSION: "1.1.1w"
      LIBEVENT_VERSION: "2.1.12-stable"
      ZLIB_VERSION: "1.3.1"

      BUILD_TYPE: "64"
      CROSS_HOST: "x86_64-w64-mingw32"
      MINGW: "mingw64"
      MINGW_DEB: "gcc-mingw-w64-x86-64"
    steps:
      - name: Set variables
        run: |
          echo "ANON_ARTIFACT=anon-windows-$(uname -m)" >> $GITHUB_ENV
          echo "ANON_JOBS=$(nproc)"
      - name: Install dependencies
        run: |
          apt-get update -qq && \
            apt-get upgrade -qy && \
            apt-get install -qy autoconf automake libtool make wget git && \
            apt-get install -qy ${MINGW_DEB}
      - name: Build openssl
        run: |
          wget --quiet https://www.openssl.org/source/openssl-${OPENSSL_VERSION}.tar.gz
          tar zxf openssl-${OPENSSL_VERSION}.tar.gz
          rm openssl-${OPENSSL_VERSION}.tar.gz

          cd openssl-${OPENSSL_VERSION}
          ./Configure ${MINGW} shared --cross-compile-prefix=${CROSS_HOST}- --prefix="/build/openssl-${BUILD_TYPE}-prefix/"
          make -j${{ env.ANON_JOBS }}
          make install
          cd ..

          rm -rf openssl-${OPENSSL_VERSION}
      - name: Build libevent
        run: |
          wget --quiet https://github.com/libevent/libevent/releases/download/release-${LIBEVENT_VERSION}/libevent-${LIBEVENT_VERSION}.tar.gz
          tar zxf libevent-${LIBEVENT_VERSION}.tar.gz
          rm libevent-${LIBEVENT_VERSION}.tar.gz

          cd libevent-${LIBEVENT_VERSION}
          ./configure --host=${CROSS_HOST} --disable-openssl --disable-shared --disable-samples --disable-libevent-regress --enable-static --prefix="/build/libevent-${BUILD_TYPE}-prefix/"
          make -j${{ env.ANON_JOBS }}
          make install
          cd ..

          rm -rf libevent-${LIBEVENT_VERSION}
      - name: Build zlib
        run: |
          wget --quiet https://www.zlib.net/fossils/zlib-${ZLIB_VERSION}.tar.gz
          tar zxf zlib-${ZLIB_VERSION}.tar.gz
          rm zlib-${ZLIB_VERSION}.tar.gz

          cd zlib-${ZLIB_VERSION}
          CHOST=${CROSS_HOST} ./configure --static --prefix="/build/zlib-${BUILD_TYPE}-prefix/"
          make -j${{ env.ANON_JOBS }}
          make install
          cd ..

          rm -rf zlib-${ZLIB_VERSION}
      - name: Build anon
        run: |
          git clone https://github.com/ATOR-Development/ator-protocol.git

          cd ator-protocol
          ./autogen.sh
          ./configure --host=${CROSS_HOST} \
            --disable-asciidoc \
            --disable-zstd \
            --disable-lzma \
            --enable-static-libevent --with-libevent-dir="/build/libevent-${BUILD_TYPE}-prefix/" \
            --enable-static-openssl --with-openssl-dir="/build/openssl-${BUILD_TYPE}-prefix/" \
            --enable-static-zlib --with-zlib-dir="/build/zlib-${BUILD_TYPE}-prefix/" \
            --disable-tool-name-check \
            --disable-gcc-hardening \
            --enable-static-tor \
            --prefix="/build/anon-prefix"
          make -j${{ env.ANON_JOBS }}
          make install
      - name: Copy executables to artifact directory
        run: |
          mkdir -p ${{ env.ANON_ARTIFACT }}
          cp ator-protocol/src/app/anon.exe ${{ env.ANON_ARTIFACT }}
          cp ator-protocol/src/tools/anon-gencert.exe ${{ env.ANON_ARTIFACT }}
      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: ${{ env.ANON_ARTIFACT }}
          path: ${{ env.ANON_ARTIFACT }}
